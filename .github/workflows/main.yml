# This is a basic workflow to help you get started with Actions

name: GitHub Actions Maven Build Example

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ disabled ]
  #remember put in branches the real branch
  #Here we say that we are going the workflow every pull but in this excersise I'm going to use it onlu every push so I coment this
  #pull_request:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout main branch from GitHub
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Step 2 - Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Step 3 - Have Github Actions Build Maven Project
        run: mvn -B package --file pom.xml

      - name: Step 4 - List the current directory
        run: ls -a
      
      # when I run maven I must generate a target folder, I want to see the jar generated on that folder
      - name: What is in the target directory
        run: |
          cd target
          ls -a
